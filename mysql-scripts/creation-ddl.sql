CREATE TABLE IF NOT EXISTS SUPPLIER (
             SUPPLIER_ID VARCHAR (20),
             NAME VARCHAR (255) NOT NULL,
             SHORT_NAME VARCHAR (25) NOT NULL,
             EMAIL VARCHAR (50) NOT NULL,             
             PHONE_NUMBER VARCHAR (20) NOT NULL,
             PRIMARY KEY (SUPPLIER_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS MEDICAL_ITEM (
             ITEM_ID VARCHAR (20),
             `TYPE` VARCHAR (255) NOT NULL,
             NAME VARCHAR (255) NOT NULL,
             UNIT VARCHAR (50) NOT NULL,
             PRIMARY KEY (ITEM_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS BENEFICIARY (
             BENEFICIARY_ID VARCHAR (20),
             `NAME` VARCHAR (255) NOT NULL,
             SHORT_NAME VARCHAR (20) NOT NULL,
             EMAIL VARCHAR (50) NOT NULL,             
             PHONE_NUMBER VARCHAR (20) NOT NULL,
             PRIMARY KEY (BENEFICIARY_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS DONAR (
             DONAR_ID VARCHAR (20),
             ORG_NAME VARCHAR (255) NOT NULL,
             ORG_LINK VARCHAR (255) NOT NULL,
             EMAIL VARCHAR (50) NOT NULL,             
             PHONE_NUMBER VARCHAR (20) NOT NULL,
             PRIMARY KEY (DONAR_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS MEDICAL_NEED (
             NEED_ID VARCHAR (20),
             ITEM_ID VARCHAR (20),
             BENEFICIARY_ID VARCHAR (20),
             `PERIOD` TIMESTAMP NOT NULL,
             URGENCY VARCHAR (50) NOT NULL,
             PRIMARY KEY (NEED_ID),
             FOREIGN KEY (ITEM_ID) REFERENCES MEDICAL_ITEM(ITEM_ID),
             CONSTRAINT CHK_NEED_URGENCY CHECK (`URGENCY` IN ('Normal', 'Critical', 'Urgent'))
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS QUOTATION_ITEM (
             QUOTATION_ITEM_ID VARCHAR (20),
             SUPPLIER_ID VARCHAR (20),
             NEED_ID VARCHAR (20),
             BRAND_NAME VARCHAR (50) NOT NULL,
             AVAILABLE_QTY INT NOT NULL DEFAULT 0,
             `EXPIRY_DATE` TIMESTAMP NOT NULL,
             UNIT_PRICE DECIMAL(15, 2) NOT NULL DEFAULT 0,
             PRIMARY KEY (QUOTATION_ITEM_ID),
             FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID), 
             FOREIGN KEY (NEED_ID) REFERENCES MEDICAL_NEED(NEED_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS AID_PACKAGE (
             PACKAGE_ID VARCHAR (20),
             NAME VARCHAR (20) NOT NULL,
             `DESCRIPTION` VARCHAR (1500) NOT NULL,
             `STATUS` VARCHAR (20) NOT NULL,
             PRIMARY KEY (PACKAGE_ID),
             CONSTRAINT CHK_PACKAGE_STATUS CHECK (`STATUS` 
             IN ('Unfunded', 'Partially Funded', 'Fully Funded',
             	 'Awaiting Payment', 'Ordered', 'Shipped',
             	 'Received MoH', 'Delivery InProgess', 'Delivered'))
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS AID_PACKAGE_QUOTATION_MAPPING (
             QUOTATION_ITEM_ID VARCHAR (20),
             PACKAGE_ID VARCHAR (20),
             QTY INT NOT NULL DEFAULT 0,
             PRIMARY KEY (QUOTATION_ITEM_ID, PACKAGE_ID),
             FOREIGN KEY (QUOTATION_ITEM_ID) REFERENCES QUOTATION_ITEM(QUOTATION_ITEM_ID), 
             FOREIGN KEY (PACKAGE_ID) REFERENCES AID_PACKAGE(PACKAGE_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS AID_PACKAGAE_UPDATE (
             PACKAGAE_UPDATE_ID VARCHAR(20),
             PACKAGE_ID VARCHAR (20),
             `UPDATE` VARCHAR (1500) NOT NULL,
             `DATE`  TIMESTAMP NOT NULL,
             PRIMARY KEY (PACKAGAE_UPDATE_ID),
             FOREIGN KEY (PACKAGE_ID) REFERENCES AID_PACKAGE(PACKAGE_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS PLEDGE (
             PLEDGE_ID VARCHAR (20),
             PACKAGE_ID VARCHAR (20),
             DONAR_ID VARCHAR (20),
             `STATUS` VARCHAR (20) NOT NULL,
             CONSTRAINT CHK_PLEDGE_STATUS CHECK (`STATUS` 
             IN ('Pledged', 'Payment Initiated', 'Payment Confirmed')),
             PRIMARY KEY (PLEDGE_ID),
             FOREIGN KEY (PACKAGE_ID) REFERENCES AID_PACKAGE(PACKAGE_ID),
             FOREIGN KEY (DONAR_ID) REFERENCES DONAR(DONAR_ID)
)ENGINE INNODB;

CREATE TABLE IF NOT EXISTS PLEDGE_UPDATE (
             PLEDGE_UPDATE_ID VARCHAR(20),
             PLEDGE_ID VARCHAR(20),
             `UPDATE` VARCHAR (1500) NOT NULL,
             `DATE`  TIMESTAMP NOT NULL,
             PRIMARY KEY (PLEDGE_UPDATE_ID),
             FOREIGN KEY (PLEDGE_ID) REFERENCES PLEDGE(PLEDGE_ID)
)ENGINE INNODB;